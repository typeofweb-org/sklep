/**
 * This file was auto-generated by swagger-to-ts.
 * Do not make direct changes to the file.
 */

export interface definitions {
  Model1: {
    id: number;
    slug: string;
    name: string;
    description: string;
    isPublic: boolean;
    regularPrice: number;
    discountPrice?: number;
    type: 'SINGLE' | 'BUNDLE';
  };
  data: definitions['Model1'][];
  meta: { total: number };
  Model2: { data: definitions['data']; meta: definitions['meta'] };
  user: {
    id: number;
    name?: string;
    email: string;
    role: 'USER' | 'ADMIN';
    createdAt?: string;
    updatedAt?: string;
  };
  Model3: {
    id: string;
    validUntil: string;
    userId: number;
    createdAt?: string;
    updatedAt?: string;
    user: definitions['user'];
  };
  Model4: { data: definitions['Model3'] };
  product: { id: number; name: string; slug: string; regularPrice: number; discountPrice?: number };
  Model5: { quantity: number; product: definitions['product'] };
  cartProducts: definitions['Model5'][];
  Model6: {
    id: string;
    createdAt: string;
    updatedAt: string;
    regularSubTotal: number;
    discountSubTotal: number;
    totalQuantity: number;
    cartProducts: definitions['cartProducts'];
  };
  Model7: definitions['Model6'][];
  Model8: { data: definitions['Model7'] };
  cart: { [key: string]: any };
  Model9: {
    id: string;
    cart: definitions['cart'];
    total: number;
    status:
      | 'PENDING'
      | 'PROCESSING'
      | 'ON_HOLD'
      | 'COMPLETED'
      | 'CANCELLED'
      | 'REFUNDED'
      | 'FAILED';
  };
  Model10: { data: definitions['Model9'] };
  Model11: { data: definitions['Model1'] };
  Model12: { data: definitions['Model6'] };
  Model13: {
    name: string;
    description: string;
    isPublic: boolean;
    regularPrice: number;
    discountPrice?: number;
    type: 'SINGLE' | 'BUNDLE';
  };
  Model14: { email: string; password: string };
  Model15: { productId: number; quantity: number };
  Model16: { productId: number };
  Model17: { orderId: string; stripeClientSecret: string };
  Model18: { data: definitions['Model17'] };

  getProductsRequestQuery: {
    take?: number;
    skip?: number;
  };

  getProducts200Response: definitions['Model2'];
  postProductsRequestBody: definitions['Model13'];

  postProducts200Response: definitions['Model11'];

  getAuthMe200Response: definitions['Model4'];

  getCartAll200Response: definitions['Model8'];
  getOrdersOrderIdRequestPathParams: {
    orderId: string;
  };

  getOrdersOrderId200Response: definitions['Model10'];
  getProductsProductIdOrSlugRequestPathParams: {
    productIdOrSlug: number | string;
  };

  getProductsProductIdOrSlug200Response: definitions['Model11'];

  postCart200Response: definitions['Model12'];
  postAuthLoginRequestBody: definitions['Model14'];

  postAuthLoginDefaultResponse: string;

  postAuthLogoutDefaultResponse: string;
  postAuthRegisterRequestBody: definitions['Model14'];

  postAuthRegisterDefaultResponse: string;

  postOrdersStripeWebhookDefaultResponse: string;
  patchCartAddRequestBody: definitions['Model15'];

  patchCartAddDefaultResponse: string;

  patchCartClearDefaultResponse: string;
  patchCartRemoveRequestBody: definitions['Model16'];

  patchCartRemoveDefaultResponse: string;
  patchCartSetRequestBody: definitions['Model15'];

  patchCartSetDefaultResponse: string;

  patchOrdersInitiateStripePayment200Response: definitions['Model18'];
  putProductsProductIdRequestPathParams: {
    productId: number;
  };
  putProductsProductIdRequestBody: definitions['Model13'];

  putProductsProductId200Response: definitions['Model11'];
  deleteProductsProductIdRequestPathParams: {
    productId: number;
  };

  deleteProductsProductIdDefaultResponse: string;

  pathsDefinitions: {
    '/products': {
      GET: {
        requestQuery: {
          take?: number;
          skip?: number;
        };

        response: definitions['Model2'];
      };
      POST: {
        requestBody: definitions['Model13'];

        response: definitions['Model11'];
      };
    };
    '/auth/me': {
      GET: {
        response: definitions['Model4'];
      };
    };
    '/cart/all': {
      GET: {
        response: definitions['Model8'];
      };
    };
    '/orders/{orderId}': {
      GET: {
        requestPathParams: {
          orderId: string;
        };

        response: definitions['Model10'];
      };
    };
    '/products/{productIdOrSlug}': {
      GET: {
        requestPathParams: {
          productIdOrSlug: number | string;
        };

        response: definitions['Model11'];
      };
    };
    '/cart': {
      POST: {
        response: definitions['Model12'];
      };
    };
    '/auth/login': {
      POST: {
        requestBody: definitions['Model14'];

        response: string;
      };
    };
    '/auth/logout': {
      POST: {
        response: string;
      };
    };
    '/auth/register': {
      POST: {
        requestBody: definitions['Model14'];

        response: string;
      };
    };
    '/orders/stripe/webhook': {
      POST: {
        response: string;
      };
    };
    '/cart/add': {
      PATCH: {
        requestBody: definitions['Model15'];

        response: string;
      };
    };
    '/cart/clear': {
      PATCH: {
        response: string;
      };
    };
    '/cart/remove': {
      PATCH: {
        requestBody: definitions['Model16'];

        response: string;
      };
    };
    '/cart/set': {
      PATCH: {
        requestBody: definitions['Model15'];

        response: string;
      };
    };
    '/orders/initiate-stripe-payment': {
      PATCH: {
        response: definitions['Model18'];
      };
    };
    '/products/{productId}': {
      PUT: {
        requestPathParams: {
          productId: number;
        };
        requestBody: definitions['Model13'];

        response: definitions['Model11'];
      };
      DELETE: {
        requestPathParams: {
          productId: number;
        };

        response: string;
      };
    };
  };
}
